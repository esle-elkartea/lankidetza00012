package bgc.gui.proy.nuevo;
import bgc.gui.VContenedor;
import bgc.gui.inicio.VInicio;
import bgc.negocio.proyecto.Proyecto;
import bgc.negocio.correo.ResultadoEnvio;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.lang.reflect.Array;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.plaf.metal.MetalInternalFrameUI;
/**
 * La clase VNuevoProyEnvio proporciona la interfaz necesaria para albergar el 
 * PanelEnvio
 *
 * @author Campus - Telematika, S.L.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Lesser GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 * USA.
 */
public class VNuevoProyEnvio extends javax.swing.JInternalFrame implements MouseListener{
    
    
   /**Array con los resultado de los diferentes envíos*/
    ResultadoEnvio []as;
    /**Dirección de correo electronico a la que se está enviando*/
    JLabel actual=null;
    /**Panel que va a estar contenido en esta ventana*/
    PanelEnvio panel;
    /*Crea una nueva instancia del Internal Frame VNuevoProyEnvio*/
    public VNuevoProyEnvio(Proyecto p,ResultadoEnvio[]as) {
        initComponents();
        proy=p;
        this.as=as;
        panel=new PanelEnvio(proy,this,as);
        this.panel.jTabbedPane1.setTitleAt(0,"todos");
         this.panel.jTabbedPane1.setTitleAt(1,"Correctos");
        this.panel.jTabbedPane1.setTitleAt(2,"Error");
        ((MetalInternalFrameUI)this.getUI()).setNorthPane(null);
        panel.setSize(925, 525);
        panel.setLocation(60,120);
        jLabel1.add(panel);
        panel.deshabilitar();
        this.setSize(1024, 670);
        botonCerrar=new JLabel(new ImageIcon(getClass().getResource("/hermes/imagenes/iconos_barra/icono_cerrar.png")));
        botonCerrar.setSize(20,20);
        botonCerrar.setLocation(965,30);
        botonCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
             public void mouseEntered(java.awt.event.MouseEvent evt) {
                 botonCerrarMouseEntered(evt);
             }
             public void mouseClicked(java.awt.event.MouseEvent evt){
                botonCerrarMouseClicked(evt);
             }
             
         });
         jLabel1.add(botonCerrar);
        
    }
    /**Modifica el listado de los resultqados de los envios*/
    public void setListado(ResultadoEnvio []re) {
        as=re;
        panel.setListado(as);
    }
    /**Cierra el panel de progreso*/
    public void eliminarProgreso()
    {
        panel.remove(0);
        panel.habilitar();
        this.validate();
        this.repaint();
    }
    /**Cambia el cursos a modo mano*/
    private void botonCerrarMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        botonCerrar.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }
    /**Vuelve a la pantalla de inicio*/
    private void botonCerrarMouseClicked(java.awt.event.MouseEvent evt){
        
       VInicio v = new VInicio();
       this.getParent().add(v);
       this.dispose();
       Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
       v.setLocation(screenSize.width/2-v.getSize().width/2, screenSize.height/2-v.getSize().height/2);
       v.show();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        menuEnviado = new javax.swing.JPopupMenu();
        elementoMenu = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();

        elementoMenu.setText("ver detalles...");
        elementoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elementoMenuActionPerformed(evt);
            }
        });

        menuEnviado.add(elementoMenu);

        setBackground(new java.awt.Color(216, 228, 198));
        setBorder(null);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hermes/imagenes/automat/ResultadoEnvio_fondo.png")));
        getContentPane().add(jLabel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**Muestra los detalles del error del envío*/
    private void elementoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elementoMenuActionPerformed
// TODO add your handling code here:
        
        JOptionPane.showMessageDialog(null,as[buscar(actual.getText())].getResultado(),"Detalles del error del evio",JOptionPane.OK_OPTION);
//,as[buscar(actual.getText())].getResultado(),"Detalles del error del evio",JOptionPane.OK_OPTION,JOptionPane.INFORMATION_MESSAGE,null);
        
    }//GEN-LAST:event_elementoMenuActionPerformed
     /**Refresca el jTabbedPane*/
    public void validar()
    {
        this.panel.jTabbedPane1.validate();
        this.panel.jTabbedPane1.repaint();
        this.setLocation(this.getLocation());
        this.actualizar();
    
    }
        
    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
// TODO add your handling code here:
       
    }//GEN-LAST:event_formInternalFrameActivated
     /**Actualiza los paneles contenidos en las pestañas del jTabbedPane*/
    public void actualizar()
    {
        this.panel.jPanel2.removeAll();
     JLabel[] jl=new JLabel[Array.getLength(as)];
        
        for(int i=0;i<Array.getLength(as);i++) {
           if(as[i]!=null)
           {
            if(as[i].getResultado().indexOf("Ok") >=0) {
                jl[i]=new JLabel(as[i].getCliente().getNombre()+" "+as[i].getCliente().getApellido()+"   "+as[i].getCliente().getEmail(),new ImageIcon(getClass().getResource("/bgc/gui/imagenes/ok.jpeg")),JLabel.LEFT);
                jl[i].setForeground(Color.green);
                
            } else {
                jl[i]=new JLabel(as[i].getCliente().getNombre()+" "+as[i].getCliente().getApellido()+"   "+as[i].getCliente().getEmail(),new ImageIcon(getClass().getResource("/bgc/gui/imagenes/error.jpeg")),JLabel.LEFT);
                jl[i].setForeground(Color.red);
                
            }
            jl[i].setSize(200,50);
            jl[i].setLocation(0,i+50);
            jl[i].addMouseListener(this);
           }
        }
        panel.jPanel2.setLayout(new GridLayout(Array.getLength(as),1));
        for(int i=0;i<Array.getLength(as);i++) {
            if(as[i]!=null)
                    panel.jPanel2.add(jl[i]);
            this.validate();
            this.repaint();
        }
    
    }
    
    
    
    /**Proyecto que estamos enviando*/
    Proyecto proy;
     /**No es necesaria la implementacion*/
    public void mouseReleased(java.awt.event.MouseEvent e) {
    }
     /**No es necesaria la implementacion*/
    public void mousePressed(java.awt.event.MouseEvent e) {
    }
     /**No es necesaria la implementacion*/
    public void mouseExited(java.awt.event.MouseEvent e) {
    }
     /**No es necesaria la implementacion*/
    public void mouseEntered(java.awt.event.MouseEvent e) {
    }
     /**Muestra el menu para ver detalles del envío*/
    public void mouseClicked(java.awt.event.MouseEvent e) {
     
      
        actual=(JLabel)e.getSource();
        
        if(e.getButton()==MouseEvent.BUTTON3)
        {
           
            if(buscarError(actual.getText()))
                {
                   
                 menuEnviado.show(actual,e.getX(),e.getY()); 
                 
                }
        }
        
        
        
    }
     /**Devuelve si ha habido un error en el envío*/
    public boolean buscarError(String s)
    {
        s=s.substring(s.lastIndexOf(" ")+1);
     
        for(int i=0;i<Array.getLength(as);i++)
            if(as[i].getCliente().getEmail().equals(s))
                if(as[i].getResultado().indexOf("Error")>=0)
                        return true;
        return false;
    
    }
    
    public int buscar(String s)
    {
         s=s.substring(s.lastIndexOf(" ")+1);
        for(int i=0;i<Array.getLength(as);i++)
            if(as[i].getCliente().getEmail().equals(s))
                 return i;
        return -1;
    
    }
     /**Devuelve la posición del array donde se encuentra el string pasado a la función*/
    public Proyecto getProyecto(){return this.proy;}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem elementoMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu menuEnviado;
    // End of variables declaration//GEN-END:variables
    /**Icono para el boton cerrar*/
    javax.swing.JLabel botonCerrar;
    
}
