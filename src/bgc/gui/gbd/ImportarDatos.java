package bgc.gui.gbd;

import bgc.negocio.ExcelAdapter;
import bgc.bd.GestorBD;
import bgc.negocio.Cliente;
import bgc.negocio.Fecha;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.util.Vector;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JTable;
/**
 * La clase ImportarDatos proporciona un panel para importar datos desde una hoja de
 *cálculo
 *
 * @author Campus - Telematika, S.L.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Lesser GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 * USA.
 */
public class ImportarDatos extends javax.swing.JDialog {
    
    /** Crea un nuevo JDialog ImportarDatos */
    public ImportarDatos(java.awt.Frame parent, boolean modal, VVisorGestor v) {
        super(parent, modal);
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(screenSize.width/2-this.getSize().width/2, screenSize.height/2-this.getSize().height/2-30);
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        GestorBD gbd=new GestorBD();
        gbd.abrirBD();
        Vector v1=gbd.obtenerCampos();
        gbd.cerrarBD();
        Object[][]ao=new Object[1][v1.size()];
        String ArrayCampos[] = new String[v1.size()];
        for (int i=0; i<v1.size();i++) {
            ArrayCampos[i] = v1.elementAt(i).toString();
        }
        
        jTable1.setModel(new javax.swing.table.DefaultTableModel(ao,ArrayCampos));
        
        
        padre=v;
        myAd = new ExcelAdapter(jTable1);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        menu = new javax.swing.JPopupMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Importar datos de clientes");
        setBackground(new java.awt.Color(240, 240, 240));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setBackground(new java.awt.Color(240, 240, 240));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Importar clientes"));
        jScrollPane1.setAutoscrolls(true);
        jTable1.setBackground(new java.awt.Color(240, 240, 240));
        jTable1.setFont(new java.awt.Font("Arial", 0, 10));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(240, 240, 240));
        jButton1.setText("A\u00f1adir a la base de datos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(240, 240, 240));
        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Pega aqu\u00ed los datos que previamente has copiado de una hoja de excel");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jButton2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 680, Short.MAX_VALUE)
                        .add(jButton1))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton2)
                    .add(jButton1))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**Cierra el menu contextual con la acción pegar*/
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
// TODO add your handling code here:
        menu.removeAll();
    }//GEN-LAST:event_jTable1MouseReleased
    /**Muestra un menu contextual con la acción pegar*/
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
// TODO add your handling code here:
        
        if (evt.getButton()==MouseEvent.BUTTON3) {
            JMenuItem pegar=new JMenuItem("pegar");
            pegar.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    
                    myAd.actionPerformed(new ActionEvent(this,0,"Paste"));
                    
                }
            });
            menu.add(pegar);
            menu.show(jTable1,evt.getX(),evt.getY());
            
        }
        
    }//GEN-LAST:event_jTable1MouseClicked
    /**Cierra el jDialog*/
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    /**Inserta los datos de la jTable en la base de datos*/
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        if ((this.jTable1.getRowCount() == 1)) {
            JOptionPane.showMessageDialog(this,"¡No hay datos para importar!","Aviso",JOptionPane.INFORMATION_MESSAGE);
            return;
        } else {
            GestorBD gbd=new GestorBD();
            gbd.abrirBD();
            int i;
            Cliente c = new Cliente();
            
            for (i=0;i<jTable1.getRowCount();i++) {
                c.setNombre(jTable1.getValueAt(i,0).toString());
                c.setApellido(jTable1.getValueAt(i,1).toString());
                c.setSexo(jTable1.getValueAt(i,2).toString());
                c.setDireccion(jTable1.getValueAt(i,3).toString());
                c.setCP(jTable1.getValueAt(i,4).toString());
                c.setCiudad(jTable1.getValueAt(i,5).toString());
                c.setProvincia(jTable1.getValueAt(i,6).toString());
                c.setEmail(jTable1.getValueAt(i,7).toString());
                c.setTelefono(jTable1.getValueAt(i,8).toString());
                c.setMovil(jTable1.getValueAt(i,9).toString());
                c.setFechaNac(Fecha.parse(jTable1.getValueAt(i,10).toString()));
                if (jTable1.getColumnCount()>Cliente.numCamposFijos+1) {
                    try {
                        c.setExtra1((String)jTable1.getValueAt(i,Cliente.numCamposFijos+1).toString());
                    } catch (NullPointerException ne) {
                           c.setExtra1("");
                        
                    }
                    if (jTable1.getColumnCount()>Cliente.numCamposFijos+2) {
                        try {
                        c.setExtra2((String)jTable1.getValueAt(i,Cliente.numCamposFijos+2).toString());
                         } catch (NullPointerException ne) {
                           c.setExtra2("");
                        
                    }
                        if (jTable1.getColumnCount()>Cliente.numCamposFijos+3) {
                            try {
                            c.setExtra3((String)jTable1.getValueAt(i,Cliente.numCamposFijos+3).toString());
                             } catch (NullPointerException ne) {
                           c.setExtra3("");
                        
                    }
                            if (jTable1.getColumnCount()>Cliente.numCamposFijos+4) {
                                try {
                                c.setExtra4((String)jTable1.getValueAt(i,Cliente.numCamposFijos+4).toString());
                                 } catch (NullPointerException ne) {
                           c.setExtra4("");
                        
                    }
                            }
                        }
                    }
                }
                gbd.anyadir(c);
            }
            gbd.cerrarBD();
            padre.cargarListado();
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPopupMenu menu;
    // End of variables declaration//GEN-END:variables
    /**Ventana que llama al jDialog*/
    VVisorGestor padre;
    /**Habilita la funcionalidad Copiar-Pegar en la jTable*/
    ExcelAdapter myAd;
}

